openapi: 3.0.3
info:
  title: 'Task Management App'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  name: Admin
                  email: admin1@example.com
                  email_verified_at: null
                  created_at: '2024-04-23T14:53:17.000000Z'
                  updated_at: '2024-04-23T14:53:17.000000Z'
                properties:
                  id:
                    type: integer
                    example: 2
                  name:
                    type: string
                    example: Admin
                  email:
                    type: string
                    example: admin1@example.com
                  email_verified_at:
                    type: string
                    example: null
                  created_at:
                    type: string
                    example: '2024-04-23T14:53:17.000000Z'
                  updated_at:
                    type: string
                    example: '2024-04-23T14:53:17.000000Z'
      tags:
        - Endpoints
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: bartholome.hyatt@example.net
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: 'zKp,q7--9ch*;/L8a'
              required:
                - email
                - password
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xntzi
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: cassandre05@example.com
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: '|B2}?kwg7?)7Z<+)<x'
              required:
                - name
                - email
                - password
  /api/tasks:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: grmcltina
                description:
                  type: string
                  description: ''
                  example: aut
                status:
                  type: string
                  description: ''
                  example: tempore
              required:
                - name
                - description
                - status
  '/api/tasks/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 'An error has occurred...'
                  message: 'Unauthorized to update the task'
                  data: ''
                properties:
                  status:
                    type: string
                    example: 'An error has occurred...'
                  message:
                    type: string
                    example: 'Unauthorized to update the task'
                  data:
                    type: string
                    example: ''
      tags:
        - Endpoints
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the task.'
        example: 1
        required: true
        schema:
          type: integer
  /api/logout:
    post:
      summary: ''
      operationId: postApiLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
